//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

@IsTest
public class RenewSubscriptionResponse_Test {
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"id\" : \"8adca9188193a8f50181aa119af916ac\",'+
		'  \"number\" : \"BF_P00000550\",'+
		'  \"status\" : \"Processed\",'+
		'  \"type\" : \"External\",'+
		'  \"accountId\" : \"8adcba09806f456e01808e68bd9a284f\",'+
		'  \"accountNumber\" : \"A00001579\",'+
		'  \"amount\" : 30000.000000000,'+
		'  \"appliedAmount\" : 30000.000000000,'+
		'  \"unappliedAmount\" : 0.000000000,'+
		'  \"refundAmount\" : 0.000000000,'+
		'  \"creditBalanceAmount\" : 0.000000000,'+
		'  \"currency\" : \"XOF\",'+
		'  \"effectiveDate\" : \"2022-06-28\",'+
		'  \"comment\" : null,'+
		'  \"paymentMethodId\" : \"8adc9dee73a422880173a5b39a4f785a\",'+
		'  \"paymentMethodSnapshotId\" : null,'+
		'  \"authTransactionId\" : null,'+
		'  \"bankIdentificationNumber\" : null,'+
		'  \"gatewayId\" : null,'+
		'  \"gatewayOrderId\" : null,'+
		'  \"gatewayResponse\" : null,'+
		'  \"gatewayResponseCode\" : null,'+
		'  \"gatewayState\" : \"NotSubmitted\",'+
		'  \"markedForSubmissionOn\" : null,'+
		'  \"referenceId\" : null,'+
		'  \"secondPaymentReferenceId\" : null,'+
		'  \"softDescriptor\" : null,'+
		'  \"softDescriptorPhone\" : null,'+
		'  \"submittedOn\" : null,'+
		'  \"settledOn\" : null,'+
		'  \"cancelledOn\" : null,'+
		'  \"createdDate\" : \"2022-06-28 11:28:09\",'+
		'  \"createdById\" : \"8adce42175e5c6fa01760944cb5e510d\",'+
		'  \"updatedDate\" : \"2022-06-28 11:28:09\",'+
		'  \"updatedById\" : \"8adce42175e5c6fa01760944cb5e510d\",'+
		'  \"PrepaidPeriods__c\" : \"1\",'+
		'  \"HomeCurrencyRate__c\" : null,'+
		'  \"DistributorOriginalPaymentSource__c\" : null,'+
		'  \"AccountCurrencyAmount__c\" : null,'+
		'  \"OrderNumber__c\" : \"DEV-280422-823\",'+
		'  \"OperatorAgent__c\" : \"Nicolas Brosse\",'+
		'  \"HomeCurrencyAmount__c\" : null,'+
		'  \"Processing__c\" : \"N/A\",'+
		'  \"HomeCurrency__c\" : \"N/A\",'+
		'  \"PaymentProcessor__c\" : \"Moov\",'+
		'  \"DistributorPaymentSource__c\" : null,'+
		'  \"SourceOperator__c\" : \"58843\",'+
		'  \"Source__c\" : \"Shop\",'+
		'  \"financeInformation\" : {'+
		'    \"bankAccountAccountingCode\" : \"Credit Card\",'+
		'    \"bankAccountAccountingCodeType\" : \"Cash\",'+
		'    \"unappliedPaymentAccountingCode\" : \"Payment en Attente d\'application\",'+
		'    \"unappliedPaymentAccountingCodeType\" : \"CustomerCashOnAccount\",'+
		'    \"transferredToAccounting\" : \"No\"'+
		'  },'+
		'  \"gatewayReconciliationStatus\" : null,'+
		'  \"gatewayReconciliationReason\" : null,'+
		'  \"payoutId\" : null,'+
		'  \"success\" : true'+
		'}';
		RenewSubscriptionResponse r = RenewSubscriptionResponse.parse(json);
		System.assert(r != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		RenewSubscriptionResponse.FinanceInformation objFinanceInformation = new RenewSubscriptionResponse.FinanceInformation(System.JSON.createParser(json));
		System.assert(objFinanceInformation != null);
		System.assert(objFinanceInformation.bankAccountAccountingCode == null);
		System.assert(objFinanceInformation.bankAccountAccountingCodeType == null);
		System.assert(objFinanceInformation.unappliedPaymentAccountingCode == null);
		System.assert(objFinanceInformation.unappliedPaymentAccountingCodeType == null);
		System.assert(objFinanceInformation.transferredToAccounting == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		RenewSubscriptionResponse objRenewSubscriptionResponse = new RenewSubscriptionResponse(System.JSON.createParser(json));
		System.assert(objRenewSubscriptionResponse != null);
		System.assert(objRenewSubscriptionResponse.id == null);
		System.assert(objRenewSubscriptionResponse.number_Z == null);
		System.assert(objRenewSubscriptionResponse.status == null);
		System.assert(objRenewSubscriptionResponse.type == null);
		System.assert(objRenewSubscriptionResponse.accountId == null);
		System.assert(objRenewSubscriptionResponse.accountNumber == null);
		System.assert(objRenewSubscriptionResponse.amount == null);
		System.assert(objRenewSubscriptionResponse.appliedAmount == null);
		System.assert(objRenewSubscriptionResponse.unappliedAmount == null);
		System.assert(objRenewSubscriptionResponse.refundAmount == null);
		System.assert(objRenewSubscriptionResponse.creditBalanceAmount == null);
		System.assert(objRenewSubscriptionResponse.currency_Z == null);
		System.assert(objRenewSubscriptionResponse.effectiveDate == null);
		System.assert(objRenewSubscriptionResponse.comment == null);
		System.assert(objRenewSubscriptionResponse.paymentMethodId == null);
		System.assert(objRenewSubscriptionResponse.paymentMethodSnapshotId == null);
		System.assert(objRenewSubscriptionResponse.authTransactionId == null);
		System.assert(objRenewSubscriptionResponse.bankIdentificationNumber == null);
		System.assert(objRenewSubscriptionResponse.gatewayId == null);
		System.assert(objRenewSubscriptionResponse.gatewayOrderId == null);
		System.assert(objRenewSubscriptionResponse.gatewayResponse == null);
		System.assert(objRenewSubscriptionResponse.gatewayResponseCode == null);
		System.assert(objRenewSubscriptionResponse.gatewayState == null);
		System.assert(objRenewSubscriptionResponse.markedForSubmissionOn == null);
		System.assert(objRenewSubscriptionResponse.referenceId == null);
		System.assert(objRenewSubscriptionResponse.secondPaymentReferenceId == null);
		System.assert(objRenewSubscriptionResponse.softDescriptor == null);
		System.assert(objRenewSubscriptionResponse.softDescriptorPhone == null);
		System.assert(objRenewSubscriptionResponse.submittedOn == null);
		System.assert(objRenewSubscriptionResponse.settledOn == null);
		System.assert(objRenewSubscriptionResponse.cancelledOn == null);
		System.assert(objRenewSubscriptionResponse.createdDate == null);
		System.assert(objRenewSubscriptionResponse.createdById == null);
		System.assert(objRenewSubscriptionResponse.updatedDate == null);
		System.assert(objRenewSubscriptionResponse.updatedById == null);
		System.assert(objRenewSubscriptionResponse.PrepaidPeriods == null);
		System.assert(objRenewSubscriptionResponse.HomeCurrencyRate == null);
		System.assert(objRenewSubscriptionResponse.DistributorOriginalPaymentSource == null);
		System.assert(objRenewSubscriptionResponse.AccountCurrencyAmount == null);
		System.assert(objRenewSubscriptionResponse.OrderNumber == null);
		System.assert(objRenewSubscriptionResponse.OperatorAgent == null);
		System.assert(objRenewSubscriptionResponse.HomeCurrencyAmount == null);
		System.assert(objRenewSubscriptionResponse.Processing == null);
		System.assert(objRenewSubscriptionResponse.HomeCurrency == null);
		System.assert(objRenewSubscriptionResponse.PaymentProcessor == null);
		System.assert(objRenewSubscriptionResponse.DistributorPaymentSource == null);
		System.assert(objRenewSubscriptionResponse.SourceOperator == null);
		System.assert(objRenewSubscriptionResponse.Source == null);
		System.assert(objRenewSubscriptionResponse.financeInformation == null);
		System.assert(objRenewSubscriptionResponse.gatewayReconciliationStatus == null);
		System.assert(objRenewSubscriptionResponse.gatewayReconciliationReason == null);
		System.assert(objRenewSubscriptionResponse.payoutId == null);
		System.assert(objRenewSubscriptionResponse.success == null);
	}
}